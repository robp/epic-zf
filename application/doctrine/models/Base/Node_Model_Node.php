<?php

/**
 * Node_Model_Base_Node
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $type
 * @property string $title
 * @property clob $body
 * @property clob $teaser
 * @property boolean $published
 * @property boolean $sticky
 * @property integer $field_comment_node_id
 * @property User_Model_User $User
 * @property Doctrine_Collection $Terms
 * @property Node_Model_Type $Type
 * @property Doctrine_Collection $Taxonomy_Model_NodeTerm
 * @property Doctrine_Collection $Comments
 * 
 * @package    EPIC
 * @subpackage ##SUBPACKAGE##
 * @author     Rob Pinciuc <rob@pinciuc.com>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class Node_Model_Base_Node extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('node');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 40, array(
             'type' => 'string',
             'length' => '40',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('teaser', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('sticky', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('field_comment_node_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');

        $this->setSubClasses(array(
             'Node_Model_Page' => 
             array(
              'type' => 'page',
             ),
             'Node_Model_Story' => 
             array(
              'type' => 'story',
             ),
             'Comment_Model_Comment' => 
             array(
              'type' => 'comment',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User_Model_User as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Taxonomy_Model_Term as Terms', array(
             'refClass' => 'Taxonomy_Model_NodeTerm',
             'local' => 'node_id',
             'foreign' => 'term_id'));

        $this->hasOne('Node_Model_Type as Type', array(
             'local' => 'type',
             'foreign' => 'name',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Taxonomy_Model_NodeTerm', array(
             'local' => 'id',
             'foreign' => 'node_id'));

        $this->hasMany('Comment_Model_Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'field_comment_node_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'onInsert' => false,
             ));
        $versionable0 = new Doctrine_Template_Versionable(array(
             'auditLog' => true,
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'body',
              2 => 'teaser',
             ),
             ));
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
        $this->actAs($searchable0);
        $this->actAs($sluggable0);
    }
}