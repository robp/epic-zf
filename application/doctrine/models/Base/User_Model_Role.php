<?php

/**
 * User_Model_Base_Role
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $selectable
 * @property Doctrine_Collection $Parents
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $Privileges
 * @property Doctrine_Collection $Children
 * @property Doctrine_Collection $RoleParentParents
 * @property Doctrine_Collection $RoleParentChildren
 * @property Doctrine_Collection $User_Model_UserRole
 * @property Doctrine_Collection $RolePrivileges
 * 
 * @package    EPIC
 * @subpackage ##SUBPACKAGE##
 * @author     Rob Pinciuc <rob@pinciuc.com>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class User_Model_Base_Role extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('role');
        $this->hasColumn('name', 'string', 40, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '40',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('selectable', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('User_Model_Role as Parents', array(
             'refClass' => 'User_Model_RoleParent',
             'refClassRelationAlias' => 'ParentsAlias',
             'local' => 'child_id',
             'foreign' => 'parent_id'));

        $this->hasMany('User_Model_User as Users', array(
             'refClass' => 'User_Model_UserRole',
             'local' => 'role_id',
             'foreign' => 'user_id'));

        $this->hasMany('User_Model_Privilege as Privileges', array(
             'refClass' => 'User_Model_RolePrivilege',
             'local' => 'role_id',
             'foreign' => 'privilege_id'));

        $this->hasMany('User_Model_Role as Children', array(
             'refClass' => 'User_Model_RoleParent',
             'local' => 'parent_id',
             'foreign' => 'child_id'));

        $this->hasMany('User_Model_RoleParent as RoleParentParents', array(
             'local' => 'id',
             'foreign' => 'child_id'));

        $this->hasMany('User_Model_RoleParent as RoleParentChildren', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('User_Model_UserRole', array(
             'local' => 'id',
             'foreign' => 'role_id'));

        $this->hasMany('User_Model_RolePrivilege as RolePrivileges', array(
             'local' => 'id',
             'foreign' => 'role_id'));
    }
}