<?php

/**
 * Menu_Model_Base_Item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $parent_id
 * @property integer $menu_id
 * @property string $label
 * @property clob $description
 * @property integer $order
 * @property boolean $visible
 * @property boolean $expanded
 * @property string $resource
 * @property string $privilege
 * @property string $type
 * @property string $uri
 * @property string $action
 * @property string $controller
 * @property string $module
 * @property array $params
 * @property string $route
 * @property boolean $reset_params
 * @property Menu_Model_Menu $Menu
 * @property Menu_Model_Item $Parent
 * @property Doctrine_Collection $Items
 * 
 * @package    EPIC
 * @subpackage ##SUBPACKAGE##
 * @author     Rob Pinciuc <rob@pinciuc.com>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class Menu_Model_Base_Item extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('menuitem');
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('menu_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('weight as order', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('expanded', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('resource', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('privilege', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('type', 'string', 20, array(
             'type' => 'string',
             'default' => 'mvc',
             'length' => '20',
             ));
        $this->hasColumn('uri', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('action', 'string', 40, array(
             'type' => 'string',
             'default' => 'index',
             'length' => '40',
             ));
        $this->hasColumn('controller', 'string', 40, array(
             'type' => 'string',
             'default' => 'index',
             'length' => '40',
             ));
        $this->hasColumn('module', 'string', 40, array(
             'type' => 'string',
             'default' => 'default',
             'length' => '40',
             ));
        $this->hasColumn('params', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('route', 'string', 40, array(
             'type' => 'string',
             'default' => 'default',
             'length' => '40',
             ));
        $this->hasColumn('reset_params', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Menu_Model_Menu as Menu', array(
             'local' => 'menu_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Menu_Model_Item as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Menu_Model_Item as Items', array(
             'local' => 'id',
             'foreign' => 'parent_id'));
    }
}